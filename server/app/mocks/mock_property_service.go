// Code generated by MockGen. DO NOT EDIT.
// Source: server/app/properties.go

// Package mock_app is a generated GoMock package.
package mock_app

import (
	json "encoding/json"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	app "github.com/mattermost/mattermost-plugin-playbooks/server/app"
)

// MockPropertyService is a mock of PropertyService interface.
type MockPropertyService struct {
	ctrl     *gomock.Controller
	recorder *MockPropertyServiceMockRecorder
}

// MockPropertyServiceMockRecorder is the mock recorder for MockPropertyService.
type MockPropertyServiceMockRecorder struct {
	mock *MockPropertyService
}

// NewMockPropertyService creates a new mock instance.
func NewMockPropertyService(ctrl *gomock.Controller) *MockPropertyService {
	mock := &MockPropertyService{ctrl: ctrl}
	mock.recorder = &MockPropertyServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPropertyService) EXPECT() *MockPropertyServiceMockRecorder {
	return m.recorder
}

// CopyPlaybookPropertiesToRun mocks base method.
func (m *MockPropertyService) CopyPlaybookPropertiesToRun(playbookID, runID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CopyPlaybookPropertiesToRun", playbookID, runID)
	ret0, _ := ret[0].(error)
	return ret0
}

// CopyPlaybookPropertiesToRun indicates an expected call of CopyPlaybookPropertiesToRun.
func (mr *MockPropertyServiceMockRecorder) CopyPlaybookPropertiesToRun(playbookID, runID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CopyPlaybookPropertiesToRun", reflect.TypeOf((*MockPropertyService)(nil).CopyPlaybookPropertiesToRun), playbookID, runID)
}

// CreatePropertyField mocks base method.
func (m *MockPropertyService) CreatePropertyField(playbookID string, propertyField app.PropertyField) (*app.PropertyField, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePropertyField", playbookID, propertyField)
	ret0, _ := ret[0].(*app.PropertyField)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePropertyField indicates an expected call of CreatePropertyField.
func (mr *MockPropertyServiceMockRecorder) CreatePropertyField(playbookID, propertyField interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePropertyField", reflect.TypeOf((*MockPropertyService)(nil).CreatePropertyField), playbookID, propertyField)
}

// DeletePropertyField mocks base method.
func (m *MockPropertyService) DeletePropertyField(propertyID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePropertyField", propertyID)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeletePropertyField indicates an expected call of DeletePropertyField.
func (mr *MockPropertyServiceMockRecorder) DeletePropertyField(propertyID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePropertyField", reflect.TypeOf((*MockPropertyService)(nil).DeletePropertyField), propertyID)
}

// GetPropertyField mocks base method.
func (m *MockPropertyService) GetPropertyField(propertyID string) (*app.PropertyField, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPropertyField", propertyID)
	ret0, _ := ret[0].(*app.PropertyField)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPropertyField indicates an expected call of GetPropertyField.
func (mr *MockPropertyServiceMockRecorder) GetPropertyField(propertyID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPropertyField", reflect.TypeOf((*MockPropertyService)(nil).GetPropertyField), propertyID)
}

// GetPropertyFields mocks base method.
func (m *MockPropertyService) GetPropertyFields(playbookID string) ([]app.PropertyField, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPropertyFields", playbookID)
	ret0, _ := ret[0].([]app.PropertyField)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPropertyFields indicates an expected call of GetPropertyFields.
func (mr *MockPropertyServiceMockRecorder) GetPropertyFields(playbookID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPropertyFields", reflect.TypeOf((*MockPropertyService)(nil).GetPropertyFields), playbookID)
}

// GetPropertyFieldsCount mocks base method.
func (m *MockPropertyService) GetPropertyFieldsCount(playbookID string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPropertyFieldsCount", playbookID)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPropertyFieldsCount indicates an expected call of GetPropertyFieldsCount.
func (mr *MockPropertyServiceMockRecorder) GetPropertyFieldsCount(playbookID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPropertyFieldsCount", reflect.TypeOf((*MockPropertyService)(nil).GetPropertyFieldsCount), playbookID)
}

// GetRunPropertyFields mocks base method.
func (m *MockPropertyService) GetRunPropertyFields(runID string) ([]app.PropertyField, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRunPropertyFields", runID)
	ret0, _ := ret[0].([]app.PropertyField)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRunPropertyFields indicates an expected call of GetRunPropertyFields.
func (mr *MockPropertyServiceMockRecorder) GetRunPropertyFields(runID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRunPropertyFields", reflect.TypeOf((*MockPropertyService)(nil).GetRunPropertyFields), runID)
}

// GetRunPropertyValueByFieldID mocks base method.
func (m *MockPropertyService) GetRunPropertyValueByFieldID(runID, propertyFieldID string) (*app.PropertyValue, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRunPropertyValueByFieldID", runID, propertyFieldID)
	ret0, _ := ret[0].(*app.PropertyValue)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRunPropertyValueByFieldID indicates an expected call of GetRunPropertyValueByFieldID.
func (mr *MockPropertyServiceMockRecorder) GetRunPropertyValueByFieldID(runID, propertyFieldID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRunPropertyValueByFieldID", reflect.TypeOf((*MockPropertyService)(nil).GetRunPropertyValueByFieldID), runID, propertyFieldID)
}

// GetRunPropertyValues mocks base method.
func (m *MockPropertyService) GetRunPropertyValues(runID string) ([]app.PropertyValue, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRunPropertyValues", runID)
	ret0, _ := ret[0].([]app.PropertyValue)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRunPropertyValues indicates an expected call of GetRunPropertyValues.
func (mr *MockPropertyServiceMockRecorder) GetRunPropertyValues(runID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRunPropertyValues", reflect.TypeOf((*MockPropertyService)(nil).GetRunPropertyValues), runID)
}

// GetRunsPropertyFields mocks base method.
func (m *MockPropertyService) GetRunsPropertyFields(runIDs []string) (map[string][]app.PropertyField, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRunsPropertyFields", runIDs)
	ret0, _ := ret[0].(map[string][]app.PropertyField)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRunsPropertyFields indicates an expected call of GetRunsPropertyFields.
func (mr *MockPropertyServiceMockRecorder) GetRunsPropertyFields(runIDs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRunsPropertyFields", reflect.TypeOf((*MockPropertyService)(nil).GetRunsPropertyFields), runIDs)
}

// GetRunsPropertyValues mocks base method.
func (m *MockPropertyService) GetRunsPropertyValues(runIDs []string) (map[string][]app.PropertyValue, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRunsPropertyValues", runIDs)
	ret0, _ := ret[0].(map[string][]app.PropertyValue)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRunsPropertyValues indicates an expected call of GetRunsPropertyValues.
func (mr *MockPropertyServiceMockRecorder) GetRunsPropertyValues(runIDs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRunsPropertyValues", reflect.TypeOf((*MockPropertyService)(nil).GetRunsPropertyValues), runIDs)
}

// UpdatePropertyField mocks base method.
func (m *MockPropertyService) UpdatePropertyField(playbookID string, propertyField app.PropertyField) (*app.PropertyField, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdatePropertyField", playbookID, propertyField)
	ret0, _ := ret[0].(*app.PropertyField)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdatePropertyField indicates an expected call of UpdatePropertyField.
func (mr *MockPropertyServiceMockRecorder) UpdatePropertyField(playbookID, propertyField interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePropertyField", reflect.TypeOf((*MockPropertyService)(nil).UpdatePropertyField), playbookID, propertyField)
}

// UpsertRunPropertyValue mocks base method.
func (m *MockPropertyService) UpsertRunPropertyValue(runID, propertyFieldID string, value json.RawMessage) (*app.PropertyValue, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpsertRunPropertyValue", runID, propertyFieldID, value)
	ret0, _ := ret[0].(*app.PropertyValue)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpsertRunPropertyValue indicates an expected call of UpsertRunPropertyValue.
func (mr *MockPropertyServiceMockRecorder) UpsertRunPropertyValue(runID, propertyFieldID, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpsertRunPropertyValue", reflect.TypeOf((*MockPropertyService)(nil).UpsertRunPropertyValue), runID, propertyFieldID, value)
}
