# Copyright 2022 Mattermost, Inc.
name: "e2e-test"
description: This action used to runs cypress e2e integration tests

inputs:
  CYPRESS_serverEdition:
    description: The cypress server edition
    required: true
  SPECS:
    description: The cypress specs to run
    required: true
runs:
  using: "composite"
  steps:
    - name: ci/setup-go
      uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
      with:
        go-version: "${{ env.GO_VERSION }}"
        cache: true

    - name: ci/setup-node
      uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
      with:
        node-version-file: ".nvmrc"
        cache: "npm"
        cache-dependency-path: |
          webapp/package-lock.json
          e2e-tests/package-lock.json

    - name: ci/cache-node-modules
      id: cache-node-modules
      uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
      with:
        path: |
          webapp/node_modules
          e2e-tests/node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('webapp/package-lock.json') }}-${{ hashFiles('e2e-tests/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-modules-${{ hashFiles('webapp/package-lock.json') }}-${{ hashFiles('e2e-tests/package-lock.json') }}

    - name: ci/disable-ALSA
      run: printf "pcm.!default {\n    type plug\n    slave.pcm \"null\"\n}\n" > ~/.asoundrc;
      shell: bash

    - name: ci/restore-postresql
      uses: docker://postgres:10.17
      env:
        TEST_DATABASE_URL: postgres://mmuser:mostest@postgres:5432/mattermost_test
      with:
        entrypoint: ./.github/actions/e2e-test/generate-test-data.sh

    - name: ci/upload-licence
      env:
        MM_SERVICESETTINGS_SITEURL: http://localhost:8065
        MM_ADMIN_EMAIL: sysadmin@sample.mattermost.com
        MM_ADMIN_USERNAME: sysadmin
        MM_ADMIN_PASSWORD: Sys@dmin-sample1
      run: |
        TOKEN=`curl -i -d '{"login_id":"'${MM_ADMIN_USERNAME}'","password":"'${MM_ADMIN_PASSWORD}'"}' $MM_SERVICESETTINGS_SITEURL/api/v4/users/login | grep Token | cut -d' ' -f2`
        TOKEN=${TOKEN//$'\r'/}
        STATUSCODE=$(curl --retry 3 -X POST -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" -d '{"receive_emails_accepted": true, "terms_accepted": true, "users": 100, "company_country": "US", "contact_email": "'${MM_ADMIN_EMAIL}'", "contact_name": "Test Mattermost", "company_name": "MattermostTest", "company_size": "1-10"}' $MM_SERVICESETTINGS_SITEURL/api/v4/trial-license -w "%{http_code}" -o /dev/stderr)
        if test $STATUSCODE -ne 200; then exit 1; fi
      shell: bash

    - name: ci/installing-deps
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      shell: bash
      env:
        NODE_ENV: development
      run: |
        cd webapp
        npm install --ignore-scripts --no-save
        cd ../e2e-tests
        npm install --ignore-scripts --no-save

    - name: ci/installing-cypress-deps
      shell: bash
      env:
        NODE_ENV: development
      run: |
        sudo apt-get install libgtk2.0-0t64 libgtk-3-0t64 libgbm-dev libnotify-dev libnss3 libxss1 libasound2t64 libxtst6 xauth xvfb -y
        cd e2e-tests/
        npx cypress install

    - name: ci/install-playbooks
      env:
        MM_SERVICESETTINGS_SITEURL: http://localhost:8065
        MM_ADMIN_USERNAME: sysadmin
        MM_ADMIN_PASSWORD: Sys@dmin-sample1
        MM_SERVICESETTINGS_ENABLEDEVELOPER: "true" ## Build only default since we are testing all arch on lint stage to speed up tests
      run: make deploy CGO_ENABLED=0
      shell: bash

    - name: ci/run-cypress-tests
      env:
        TYPE: NONE
        PULL_REQUEST: ""
        BROWSER: chrome
        HEADLESS: "true"
        DASHBOARD_ENABLE: "false"
        FULL_REPORT: "false"
        MM_SERVICESETTINGS_SITEURL: http://localhost:8065
        MM_ADMIN_USERNAME: sysadmin
        MM_ADMIN_PASSWORD: Sys@dmin-sample1
        CYPRESS_serverEdition: ${{ inputs.CYPRESS_serverEdition }}
        TERM: xterm
      run: |
        cd e2e-tests
        npm run test -- --spec "${{ inputs.SPECS }}"
      shell: bash

    - name: ci/upload-cypress-test-results
      if: always()
      uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 # v4.3.0
      with:
        name: cypress-test-results
        path: |
          e2e-tests/results/junit
        retention-days: 14 ## No need to keep test results more than 14 days
        overwrite: true
